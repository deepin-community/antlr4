--- a/tool/resources/org/antlr/v4/tool/templates/unicodedata.st
+++ b/tool/resources/org/antlr/v4/tool/templates/unicodedata.st
@@ -14,15 +14,15 @@
  * Code-generated utility class mapping Unicode properties to Unicode code point ranges.
  */
 public abstract class UnicodeData {
-       private static final Map\<String, IntervalSet\> propertyCodePointRanges = new HashMap\<\>(<length(propertyCodePointRanges)>);
-       private static final Map\<String, String\> propertyAliases = new HashMap\<\>(<length(propertyAliases)>);
+       private static final Map\<String, IntervalSet> propertyCodePointRanges = new HashMap\<>(<length(propertyCodePointRanges)>);
+       private static final Map\<String, String> propertyAliases = new HashMap\<>(<length(propertyAliases)>);
 
        // Work around Java 64k bytecode method limit by splitting up static
        // initialization into one method per Unicode property
 
        <propertyCodePointRanges.keys:{ k | // Unicode code points with property "<k>"
 static private void addProperty<i>() {
-       List\<Interval\> intervals = Arrays.asList(
+       List\<Interval> intervals = Arrays.asList(
                <propertyCodePointRanges.(k).intervals:{ interval | Interval.of(<interval.a>, <interval.b>)}; separator=",\n">
        );
        IntervalSet codePointRanges = new IntervalSet(intervals);
